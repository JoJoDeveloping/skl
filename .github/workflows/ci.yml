name: CI

on:
  push:
    # Ignore bors branches, since they are covered by `clippy_bors.yml`
    branches:
      - main
    # Don't run Clippy tests, when only textfiles were modified
    paths-ignore:
      - "README"
      - "COPYRIGHT"
      - "LICENSE-*"
      - "**.md"
      - "**.txt"
  pull_request:
    # Don't run Clippy tests, when only textfiles were modified
    paths-ignore:
      - "README"
      - "COPYRIGHT"
      - "LICENSE-*"
      - "**.md"
      - "**.txt"

env:
  CARGO_TERM_COLOR: always
#  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1
  rust_nightly: nightly-2022-01-12
  rust_clippy: 1.52.0
  minrust: 1.56

defaults:
  run:
    shell: bash

jobs:
  tests-pass:
    name: all systems go
    runs-on: ubuntu-latest
    needs:
      - tarpaulin
      - miri
      - docs
    steps:
      - run: exit 0

  tarpaulin:
    name: cargo tarpaulin
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v1
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/tarpaulin@v0.1
      - name: Run cargo tarpaulin
        run: cargo tarpaulin --all-features --workspace --run-types Tests,Doctests --out Xml

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: file

  miri:
    name: miri
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust ${{ env.rust_nightly }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.rust_nightly }}
          components: miri
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: miri
        run: cargo miri test --all-features --lib
        env:
          MIRIFLAGS: -Zmiri-disable-isolation -Zmiri-tag-raw-pointers
          PROPTEST_CASES: 10
          
  docs:
    name: docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.nightly }}
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: "doc --lib --all-features"
        run: cargo doc --lib --no-deps --all-features --document-private-items
        env:
          RUSTFLAGS: --cfg docsrs
          RUSTDOCFLAGS: --cfg docsrs -Dwarnings
